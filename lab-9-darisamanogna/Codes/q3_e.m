load handel;
x = y;
sound(x, Fs);
duration = length(x) / Fs;
f0 = 1024; 
t = 0:1/Fs:duration-1/Fs;
sinusoid = sin(2*pi*f0*t);
modified_signal = x + sinusoid;
sound(modified_signal, Fs);
w0 = pi/4;
b0_fir = 1;
b_fir = [b0_fir, -2 * b0_fir * cos(w0), b0_fir];
a_fir = 1;
filtered_signal_fir = filter(b_fir, a_fir, modified_signal);
sound(filtered_signal_fir, Fs);
b0_iir = 1;
b_iir = b0_iir * ((1 - exp(1i * w0)) * (1 - exp(-1i * w0)));
r0 = 0.99; 
a_iir = [1, -r0 * (exp(1i * w0) + exp(-1i * w0)), r0^2];
filtered_signal_iir = filter(b_iir, a_iir, modified_signal);
sound(filtered_signal_iir, Fs);
